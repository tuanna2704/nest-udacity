version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test:
    docker:
      - image: cimg/node:15.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: install packages
          command: npm ci
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Run Tests
          command: npm run test
  lint:
    docker:
      - image: cimg/node:15.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: install packages
          command: npm ci
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Run Lint
          command: npm run lint

  build_and_push_docker:
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - restore_cache:
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: Build and push Docker Image
          command: |
            sudo docker build --no-cache -t tuanna2704/nest-udacity:${CIRCLE_SHA1} --tag=nest-example .
            docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
            docker push tuanna2704/nest-udacity:${CIRCLE_SHA1}
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Deploy
          command: |
            echo "Deploy to eks"

workflows:
  orb-free-workflow:
    jobs:
      - test
      - lint
      - build_and_push_docker:
          requires: [test, lint]
      - deploy:
          requires: [build_and_push_docker]